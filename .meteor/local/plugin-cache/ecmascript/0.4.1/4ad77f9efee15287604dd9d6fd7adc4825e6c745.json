{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/api/api.js","filenameRelative":"/server/api/api.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/api/api.js.map","sourceFileName":"/server/api/api.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"api"},"ignored":false,"code":"API = {\n\n  connection: function () {\n    function connection(request) {\n      var getRequestContents = API.utility.getRequestContents(request);\n      return { data: getRequestContents };\n    }\n\n    return connection;\n  }(),\n\n  handleRequest: function () {\n    function handleRequest(context, method) {\n      // var csv = context.request.files[0]['contents'];\n      // var rows = Papa.parse(csv).data;\n      // console.log(rows);\n\n      var connection = API.connection(context.request);\n      if (!connection.error) {\n        var params = connection.data;\n        var files = context.request.files;\n\n        API.methods[method](context, params, files);\n      } else {\n        API.utility.response(context, 401, connection);\n      }\n    }\n\n    return handleRequest;\n  }(),\n\n  methods: {\n    POST: function () {\n      function POST(context, params, files) {\n        // Make sure that our request has data and that the data is valid.\n        var hasData = API.utility.hasData(params);\n        // the validation does nothing at the moment\n        // validData = API.utility.validate( connection.data, { \"a\": String, \"b\": String });\n\n        if (hasData) {\n\n          var csv = files[0]['contents'];\n          var result = Papa.parse(csv, {\n            error: function () {\n              function error(err, file, inputElem, reason) {\n                // executed if an error occurs while loading the file,\n                // or if before callback aborted for some reason\n              }\n\n              return error;\n            }()\n          });\n\n          var rows = result.data;\n          var errors = result.errors;\n          if (errors != false) {\n            console.log('ERRORS:');\n            console.log(errors);\n\n            API.utility.response(context, 422, { error: 422, message: \"CSV file isn't formatted correctly: \" + errors.message });\n          }\n\n          var upper_window = \"\";\n          var lower_window = \"\";\n          var upper_range = \"\";\n          var lower_range = \"\";\n          var range_name = \"\";\n\n          var status_code = 200;\n          var other_vars = {};\n\n          for (var key in meteorBabelHelpers.sanitizeForInObject(params)) {\n            if (key == \"upper_window\") {\n              upper_window = parseFloat(params['upper_window']);\n              continue;\n            }\n            if (key == \"lower_window\") {\n              lower_window = parseFloat(params['lower_window']);\n              continue;\n            }\n            var upperRegex = /upper_([a-zA-Z\\-]+)/g;\n            var lowerRegex = /lower_([a-zA-Z\\-]+)/g;\n            var match = upperRegex.exec(key);\n            if (match != null) {\n              upper_range = params[key];\n\n              range_name = match[1];\n              continue;\n            }\n            match = lowerRegex.exec(key);\n            if (match != null) {\n              lower_range = params[key];\n              range_name = match[1];\n              continue;\n            }\n            other_vars[key] = params[key];\n          }\n\n          API.utility.response(context, 200, {\n            upper_window: upper_window,\n            lower_window: lower_window,\n            upper_range: upper_range,\n            lower_range: lower_range,\n            range_name: range_name,\n            other_var: other_vars,\n            csv1_name: files[0]['fieldname'],\n            csv1: rows\n          });\n        } else {\n          API.utility.response(context, 404, { error: 404, message: \"No parameters found, dude.\" });\n        }\n      }\n\n      return POST;\n    }()\n  },\n\n  utility: {\n    getRequestContents: function () {\n      function getRequestContents(request) {\n        return request.query;\n      }\n\n      return getRequestContents;\n    }(),\n    hasData: function () {\n      function hasData(data) {\n        return Object.keys(data).length > 0 ? true : false;\n      }\n\n      return hasData;\n    }(),\n    response: function () {\n      function response(context, statusCode, data) {\n        context.response.setHeader('Content-Type', 'application/json');\n        context.response.statusCode = statusCode;\n        context.response.end(JSON.stringify(data));\n      }\n\n      return response;\n    }(),\n    validate: function () {\n      function validate(data, pattern) {\n        return true;\n        return Match.test(data, pattern);\n      }\n\n      return validate;\n    }()\n  }\n};","ast":null,"map":{"version":3,"sources":["/server/api/api.js"],"names":[],"mappings":"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","file":"/server/api/api.js.map","sourcesContent":["API = {\n\n  connection: function( request ) {\n    var getRequestContents = API.utility.getRequestContents( request );\n    return { data: getRequestContents };\n  },\n\n  handleRequest: function( context, method ) {\n    // var csv = context.request.files[0]['contents'];\n    // var rows = Papa.parse(csv).data;\n    // console.log(rows);\n\n    var connection = API.connection( context.request );\n    if ( !connection.error ) {\n      var params = connection.data;\n      var files  = context.request.files;\n\n\n      API.methods[ method ]( context, params, files );\n    } else {\n      API.utility.response( context, 401, connection );\n    }\n  },\n\n  methods: {\n    POST: function( context, params, files ) {\n      // Make sure that our request has data and that the data is valid.\n      var hasData   = API.utility.hasData( params );\n          // the validation does nothing at the moment\n          // validData = API.utility.validate( connection.data, { \"a\": String, \"b\": String });\n\n      if ( hasData ) {\n\n        var csv = files[0]['contents'];\n        var result = Papa.parse(csv, {\n          error: function(err, file, inputElem, reason) {\n            // executed if an error occurs while loading the file,\n            // or if before callback aborted for some reason\n          }\n        });\n\n        var rows = result.data;\n        var errors = result.errors;\n        if (errors != false) {\n          console.log('ERRORS:');\n          console.log(errors);\n\n          API.utility.response( context, 422, { error: 422, message: \"CSV file isn't formatted correctly: \" + errors.message } );\n        }\n\n        var upper_window = \"\";\n        var lower_window = \"\";\n        var upper_range = \"\";\n        var lower_range = \"\";\n        var range_name = \"\";\n\n        var status_code = 200;\n        var other_vars = {};\n\n        for (var key in params) {\n          if (key == \"upper_window\"){\n            upper_window = parseFloat(params['upper_window']);\n            continue;\n          }\n          if (key == \"lower_window\"){\n            lower_window = parseFloat(params['lower_window']);\n            continue;\n          }\n          var upperRegex = /upper_([a-zA-Z\\-]+)/g;\n          var lowerRegex = /lower_([a-zA-Z\\-]+)/g;\n          var match = upperRegex.exec(key);\n          if (match != null) {\n            upper_range = params[key];\n\n            range_name = match[1];\n            continue;\n          }\n          match = lowerRegex.exec(key);\n          if (match != null) {\n            lower_range = params[key];\n            range_name = match[1];\n            continue;\n          }\n          other_vars[key] = params[key];\n        }\n\n        API.utility.response( context, 200, {\n          upper_window : upper_window,\n          lower_window : lower_window,\n          upper_range  : upper_range,\n          lower_range  : lower_range,\n          range_name   : range_name,\n          other_var    : other_vars,\n          csv1_name    : files[0]['fieldname'],\n          csv1         : rows,\n        });\n      } else {\n        API.utility.response( context, 404, { error: 404, message: \"No parameters found, dude.\" } );\n      }\n    },\n  },\n\n  utility: {\n    getRequestContents: function( request ) {\n      return request.query;\n    },\n    hasData: function( data ) {\n      return Object.keys( data ).length > 0 ? true : false;\n    },\n    response: function( context, statusCode, data ) {\n      context.response.setHeader( 'Content-Type', 'application/json' );\n      context.response.statusCode = statusCode;\n      context.response.end( JSON.stringify( data) );\n    },\n    validate: function( data, pattern ) {\n      return true;\n      return Match.test( data, pattern );\n    }\n  }\n};\n"]},"hash":"4ad77f9efee15287604dd9d6fd7adc4825e6c745"}
