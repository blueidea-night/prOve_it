{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/api/api.js","filenameRelative":"/server/api/api.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/api/api.js.map","sourceFileName":"/server/api/api.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"api"},"ignored":false,"code":"API = {\n\n  connection: function () {\n    function connection(request) {\n      var getRequestContents = API.utility.getRequestContents(request);\n      return { data: getRequestContents };\n    }\n\n    return connection;\n  }(),\n\n  handleRequest: function () {\n    function handleRequest(context, method) {\n      // var csv = context.request.files[0]['contents'];\n      // var rows = Papa.parse(csv).data;\n      // console.log(rows);\n\n      var connection = API.connection(context.request);\n      if (!connection.error) {\n        var params = connection.data;\n        var files = context.request.files;\n\n        API.methods[method](context, params, files);\n      } else {\n        API.utility.response(context, 401, connection);\n      }\n    }\n\n    return handleRequest;\n  }(),\n\n  methods: {\n    POST: function () {\n      function POST(context, params, files) {\n        var upper_window = \"\";\n        var lower_window = \"\";\n        var upper_range = \"\";\n        var lower_range = \"\";\n        var range_name = \"\";\n\n        var status_code = 200;\n        var other_vars = {};\n\n        for (var key in meteorBabelHelpers.sanitizeForInObject(params)) {\n          if (key == \"upper_window\") {\n            upper_window = params['upper_window'];\n            continue;\n          }\n          if (key == \"lower_window\") {\n            lower_window = params['lower_window'];\n            continue;\n          }\n          var upperRegex = /upper_([a-zA-Z\\-]+)/g;\n          var lowerRegex = /lower_([a-zA-Z\\-]+)/g;\n          var match = upperRegex.exec(key);\n          if (match != null) {\n            upper_range = params[key];\n            var match_value = match[1];\n            console.log(match_value);\n            if (API.utility.match_range_name(range_name, match_value)) {\n              range_name = match_value;\n            }\n            continue;\n          }\n          match = lowerRegex.exec(key);\n          if (match != null) {\n            lower_range = params[key];\n            //            lower_range = parseFloat.(params[key]);\n            var match_value = match[1];\n            if (API.utility.match_range_name(range_name, match_value)) {\n              range_name = match_value;\n            }\n            continue;\n          }\n          other_vars[key] = params[key];\n        }\n\n        // Make sure that our request has data and that the data is valid.\n        var requestOK = API.utility.validateRequest(upper_window, lower_window, upper_range, lower_range, range_name, files);\n\n        if (requestOK) {\n          upper_window = parseFloat(upper_window);\n          lower_window = parseFloat(lower_window);\n          upper_range = parseFloat(upper_range);\n          lower_range = parseFloat(lower_range);\n\n          for (var id in meteorBabelHelpers.sanitizeForInObject(files)) {\n            var parseObject = Papa.parse(files[id]['contents']);\n            files[id]['json'] = parseObject.data;\n            files[id]['errors'] = parseObject.errors;\n\n            console.log(parseObject.errors);\n\n            if (files[id]['errors'] == true) {\n              API.utility.response(context, 422, { error: 422, message: \"CSV file isn't formatted correctly.\" });\n            }\n          }\n\n          // the validation does nothing at the moment\n          // validData = API.utility.validate( connection.data, { \"a\": String, \"b\": String });\n\n          API.utility.response(context, status_code, {\n            upper_window: upper_window,\n            lower_window: lower_window,\n            upper_range: upper_range,\n            lower_range: lower_range,\n            range_name: range_name,\n            other_var: other_vars,\n            csv1_name: files[0]['fieldname'],\n            csv1: files[0]['json']\n          });\n        } else {\n          API.utility.response(context, 404, { error: 404, message: \"Invalid Request, dude.\" });\n        }\n      }\n\n      return POST;\n    }()\n  },\n\n  utility: {\n    getRequestContents: function () {\n      function getRequestContents(request) {\n        return request.query;\n      }\n\n      return getRequestContents;\n    }(),\n    hasData: function () {\n      function hasData(data) {\n        return Object.keys(data).length > 0 ? true : false;\n      }\n\n      return hasData;\n    }(),\n    response: function () {\n      function response(context, statusCode, data) {\n        context.response.setHeader('Content-Type', 'application/json');\n        context.response.statusCode = statusCode;\n        context.response.end(JSON.stringify(data));\n      }\n\n      return response;\n    }(),\n    validate: function () {\n      function validate(data, pattern) {\n        return Match.test(data, pattern);\n      }\n\n      return validate;\n    }(),\n    validateRequest: function () {\n      function validateRequest(upper_window, lower_window, upper_range, lower_range, range_name, files) {\n        return files.length == 2 && isNumeric(upper_window) && isNumeric(lower_window) && isNumeric(upper_range) && isNumeric(lower_range) && range_name != \"\" && parseFloat(upper_window) <= parseFloat(lower_window);\n      }\n\n      return validateRequest;\n    }(),\n    match_range_name: function () {\n      function match_range_name(range_name, matching_range_name) {\n        if (range_name == \"\") {\n          return true;\n        } else if (range_name == matching_range_name) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      return match_range_name;\n    }()\n  }\n};\n\nfunction isNumeric(num) {\n  return !isNaN(num);\n}","ast":null,"map":{"version":3,"sources":["/server/api/api.js"],"names":[],"mappings":"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","file":"/server/api/api.js.map","sourcesContent":["API = {\n\n  connection: function( request ) {\n    var getRequestContents = API.utility.getRequestContents( request );\n    return { data: getRequestContents };\n  },\n\n  handleRequest: function( context, method ) {\n    // var csv = context.request.files[0]['contents'];\n    // var rows = Papa.parse(csv).data;\n    // console.log(rows);\n\n    var connection = API.connection( context.request );\n    if ( !connection.error ) {\n      var params = connection.data;\n      var files  = context.request.files;\n\n\n      API.methods[ method ]( context, params, files );\n    } else {\n      API.utility.response( context, 401, connection );\n    }\n  },\n\n  methods: {\n    POST: function( context, params, files ) {\n      var upper_window = \"\";\n      var lower_window = \"\";\n      var upper_range = \"\";\n      var lower_range = \"\";\n      var range_name = \"\";\n\n      var status_code = 200;\n      var other_vars = {};\n\n      for (var key in params) {\n        if (key == \"upper_window\"){\n          upper_window = params['upper_window'];\n          continue;\n        }\n        if (key == \"lower_window\"){\n          lower_window = params['lower_window'];\n          continue;\n        }\n        var upperRegex = /upper_([a-zA-Z\\-]+)/g;\n        var lowerRegex = /lower_([a-zA-Z\\-]+)/g;\n        var match = upperRegex.exec(key);\n        if (match != null) {\n          upper_range = params[key];\n          var match_value = match[1];\n          console.log(match_value);\n          if (API.utility.match_range_name(range_name, match_value)){\n            range_name = match_value;\n          }\n          continue;\n        }\n        match = lowerRegex.exec(key);\n        if (match != null) {\n          lower_range = params[key];\n//            lower_range = parseFloat.(params[key]);\n          var match_value = match[1];\n          if (API.utility.match_range_name(range_name, match_value)){\n            range_name = match_value;\n          }\n          continue;\n        }\n        other_vars[key] = params[key];\n      }\n      \n      // Make sure that our request has data and that the data is valid.\n      var requestOK   = API.utility.validateRequest( upper_window , lower_window, upper_range, lower_range, range_name, files);\n\n      if ( requestOK ) {\n        upper_window = parseFloat(upper_window);\n        lower_window = parseFloat(lower_window);\n        upper_range = parseFloat(upper_range);\n        lower_range = parseFloat(lower_range);\n        \n        for (var id in files) {\n          var parseObject = Papa.parse(files[id]['contents'])\n          files[id]['json'] = parseObject.data;\n          files[id]['errors'] = parseObject.errors;\n\n          console.log(parseObject.errors);\n\n          if (files[id]['errors'] == true) {\n            API.utility.response( context, 422, { error: 422, message: \"CSV file isn't formatted correctly.\" } );\n          }\n        }\n\n          // the validation does nothing at the moment\n          // validData = API.utility.validate( connection.data, { \"a\": String, \"b\": String });\n\n        API.utility.response( context, status_code, {\n          upper_window : upper_window,\n          lower_window : lower_window,\n          upper_range  : upper_range,\n          lower_range  : lower_range,\n          range_name   : range_name,\n          other_var    : other_vars,\n          csv1_name    : files[0]['fieldname'],\n          csv1         : files[0]['json'],\n        });\n      } else {\n        API.utility.response( context, 404, { error: 404, message: \"Invalid Request, dude.\" } );\n      }\n    },\n  },\n\n  utility: {\n    getRequestContents: function( request ) {\n      return request.query;\n    },\n    hasData: function( data ) {\n      return Object.keys( data ).length > 0 ? true : false;\n    },\n    response: function( context, statusCode, data ) {\n      context.response.setHeader( 'Content-Type', 'application/json' );\n      context.response.statusCode = statusCode;\n      context.response.end( JSON.stringify( data) );\n    },\n    validate: function( data, pattern ) {\n      return Match.test( data, pattern );\n    },\n    validateRequest: function ( upper_window , lower_window, upper_range, lower_range, range_name, files ) {\n      return files.length == 2 &&\n        isNumeric(upper_window) &&\n        isNumeric(lower_window) &&\n        isNumeric(upper_range) &&\n        isNumeric(lower_range) &&\n        range_name != \"\" &&\n        parseFloat(upper_window) <= parseFloat(lower_window);\n    },\n    match_range_name: function (range_name, matching_range_name) {\n      if (range_name == \"\") {\n        return true;\n      } else if (range_name == matching_range_name) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n  }\n};\n\n\nfunction isNumeric(num) {\n    return !isNaN(num)\n}\n\n"]},"hash":"cdc704b58220ba11cd51d9ca3b8330c3707e40b5"}
