[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nHTTP = Package.http.HTTP;\nHTTPInternals = Package.http.HTTPInternals;\nBusboy = Package['shammar13:busboy'].Busboy;\nPapa = Package['harrison:papa-parse'].Papa;\nAsync = Package['meteorhacks:async'].Async;\nRandom = Package.random.Random;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"api\":{\"routers.js\":function(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/api/routers.js                                                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nif (Meteor.isServer) {                                                                                         // 1\n  var fs = Npm.require(\"fs\"),                                                                                  // 2\n      os = Npm.require(\"os\"),                                                                                  //\n      path = Npm.require(\"path\");                                                                              //\n                                                                                                               //\n  Router.onBeforeAction(function (req, res, next) {                                                            // 6\n    var files = []; // Store a file and then pass it to the request.                                           // 7\n                                                                                                               //\n    if (req.method === \"POST\") {                                                                               // 6\n      var busboy = new Busboy({                                                                                // 10\n        headers: req.headers                                                                                   // 11\n      });                                                                                                      //\n      busboy.on(\"file\", function (fieldname, file, filename, encoding, mimetype) {                             // 13\n        // var saveTo = path.join(os.tmpDir(), filename);                                                      //\n        // var saveTo = path.join(process.cwd()+ \"/tmp/\", filename);                                           //\n        // var token = Random.id( 10 );                                                                        //\n        // req.token = token;                                                                                  //\n        // var saveTo = path.join(process.env.PWD, \"private\", filename);                                       //\n        var fileSizeBytes = 0;                                                                                 // 19\n        var contents = '';                                                                                     // 20\n                                                                                                               //\n        // file.pipe(fs.createWriteStream(saveTo));                                                            //\n        // var string = Assets.getText(filename);                                                              //\n                                                                                                               //\n        file.on(\"data\", function (data) {                                                                      // 13\n          fileSizeBytes = fileSizeBytes + data.length;                                                         // 26\n          contents += data;                                                                                    // 27\n        });                                                                                                    //\n                                                                                                               //\n        file.on('end', function () {                                                                           // 30\n          // console.log(datas);                                                                               //\n          files.push({                                                                                         // 32\n            fieldname: fieldname,                                                                              // 33\n            originalFilename: filename,                                                                        // 34\n            contents: contents,                                                                                // 35\n            size: fileSizeBytes                                                                                // 36\n          });                                                                                                  //\n        });                                                                                                    //\n      });                                                                                                      //\n      busboy.on(\"finish\", function () {                                                                        // 40\n        // Pass the file on to the request                                                                     //\n        // console.log(files);                                                                                 //\n        req.files = files;                                                                                     // 43\n        next();                                                                                                // 44\n      });                                                                                                      //\n      // Pass request to busboy                                                                                //\n      req.pipe(busboy);                                                                                        // 9\n    } else {                                                                                                   //\n      next();                                                                                                  // 49\n    }                                                                                                          //\n  });                                                                                                          //\n}                                                                                                              //\n                                                                                                               //\nRouter.route('/api/v1/event-study', function () {                                                              // 54\n                                                                                                               //\n  this.response.setHeader('Access-Control-Allow-Origin', '*');                                                 // 56\n                                                                                                               //\n  if (this.request.method === \"OPTIONS\") {                                                                     // 58\n    this.response.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n    this.response.setHeader('Access-Control-Allow-Methods', 'POST, PUT, GET, DELETE, OPTIONS');                // 60\n    this.response.end('Set OPTIONS.');                                                                         // 61\n  } else {                                                                                                     //\n    API.handleRequest(this, this.request.method);                                                              // 63\n  }                                                                                                            //\n}, { where: 'server' });                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"main.js\":[\"meteor/meteor\",function(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nvar _meteor = require('meteor/meteor');                                                                        // 1\n                                                                                                               //\n_meteor.Meteor.startup(function () {                                                                           // 3\n  // code to run on server at startup                                                                          //\n});                                                                                                            //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/api/routers.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/api/routers.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,OAAO,QAAP,EAAiB;AACnB,MAAI,KAAK,IAAI,OAAJ,CAAY,IAAZ,CAAL;MACA,KAAK,IAAI,OAAJ,CAAY,IAAZ,CAAL;MACA,OAAO,IAAI,OAAJ,CAAY,MAAZ,CAAP,CAHe;;AAKnB,SAAO,cAAP,CAAsB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC7C,QAAI,QAAQ,EAAR;;AADyC,QAGzC,IAAI,MAAJ,KAAe,MAAf,EAAuB;AACzB,UAAI,SAAS,IAAI,MAAJ,CAAW;AACpB,iBAAS,IAAI,OAAJ;OADA,CAAT,CADqB;AAIzB,aAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,SAAT,EAAoB,IAApB,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,QAA9C,EAAwD;;;;;;AAMxE,YAAI,gBAAgB,CAAhB,CANoE;AAOxE,YAAI,WAAW,EAAX;;;;;AAPoE,YAYxE,CAAK,EAAL,CAAQ,MAAR,EAAgB,UAAS,IAAT,EAAe;AAC7B,0BAAgB,gBAAgB,KAAK,MAAL,CADH;AAE7B,sBAAY,IAAZ,CAF6B;SAAf,CAAhB,CAZwE;;AAiBxE,aAAK,EAAL,CAAQ,KAAR,EAAe,YAAW;;AAExB,gBAAM,IAAN,CAAW;AACT,uBAAW,SAAX;AACA,8BAAkB,QAAlB;AACA,sBAAW,QAAX;AACA,kBAAM,aAAN;WAJF,EAFwB;SAAX,CAAf,CAjBwE;OAAxD,CAAlB,CAJyB;AA+BzB,aAAO,EAAP,CAAU,QAAV,EAAoB,YAAW;;;AAG7B,YAAI,KAAJ,GAAY,KAAZ,CAH6B;AAI7B,eAJ6B;OAAX,CAApB;;AA/ByB,SAsCzB,CAAI,IAAJ,CAAS,MAAT,EAtCyB;KAA3B,MAuCO;AACL,aADK;KAvCP;GAHoB,CAAtB,CALmB;CAArB;;AAqDA,OAAO,KAAP,CAAc,qBAAd,EAAqC,YAAW;;AAE9C,OAAK,QAAL,CAAc,SAAd,CAAyB,6BAAzB,EAAwD,GAAxD,EAF8C;;AAI9C,MAAK,KAAK,OAAL,CAAa,MAAb,KAAwB,SAAxB,EAAoC;AACvC,SAAK,QAAL,CAAc,SAAd,CAAyB,8BAAzB,EAAyD,gDAAzD,EADuC;AAEvC,SAAK,QAAL,CAAc,SAAd,CAAyB,8BAAzB,EAAyD,iCAAzD,EAFuC;AAGvC,SAAK,QAAL,CAAc,GAAd,CAAmB,cAAnB,EAHuC;GAAzC,MAIO;AACL,QAAI,aAAJ,CAAmB,IAAnB,EAAyB,KAAK,OAAL,CAAa,MAAb,CAAzB,CADK;GAJP;CAJmC,EAWlC,EAAE,OAAO,QAAP,EAXL,2F;;;;;;;;;;;ACrDA;;AAEA,eAAO,OAAP,CAAe,YAAM;;CAAN,CAAf,+G","file":"/app.js","sourcesContent":["if (Meteor.isServer) {\n  var fs = Npm.require(\"fs\"),\n      os = Npm.require(\"os\"),\n      path = Npm.require(\"path\");\n\n  Router.onBeforeAction(function(req, res, next) {\n    var files = []; // Store a file and then pass it to the request.\n\n    if (req.method === \"POST\") {\n      var busboy = new Busboy({\n          headers: req.headers\n      });\n      busboy.on(\"file\", function(fieldname, file, filename, encoding, mimetype) {\n        // var saveTo = path.join(os.tmpDir(), filename);\n        // var saveTo = path.join(process.cwd()+ \"/tmp/\", filename);\n        // var token = Random.id( 10 );\n        // req.token = token;\n        // var saveTo = path.join(process.env.PWD, \"private\", filename);\n        var fileSizeBytes = 0;\n        var contents = '';\n\n        // file.pipe(fs.createWriteStream(saveTo));\n        // var string = Assets.getText(filename);\n\n        file.on(\"data\", function(data) {\n          fileSizeBytes = fileSizeBytes + data.length;\n          contents += data;\n        });\n\n        file.on('end', function() {\n          // console.log(datas);\n          files.push({\n            fieldname: fieldname,\n            originalFilename: filename,\n            contents : contents,\n            size: fileSizeBytes,\n          });\n        });\n      });\n      busboy.on(\"finish\", function() {\n        // Pass the file on to the request\n        // console.log(files);\n        req.files = files;\n        next();\n      });\n      // Pass request to busboy\n      req.pipe(busboy);\n    } else {\n      next();\n    }\n  });\n}\n\nRouter.route( '/api/v1/event-study', function() {\n\n  this.response.setHeader( 'Access-Control-Allow-Origin', '*' );\n\n  if ( this.request.method === \"OPTIONS\" ) {\n    this.response.setHeader( 'Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept' );\n    this.response.setHeader( 'Access-Control-Allow-Methods', 'POST, PUT, GET, DELETE, OPTIONS' );\n    this.response.end( 'Set OPTIONS.' );\n  } else {\n    API.handleRequest( this, this.request.method);\n  }\n}, { where: 'server' } );\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]