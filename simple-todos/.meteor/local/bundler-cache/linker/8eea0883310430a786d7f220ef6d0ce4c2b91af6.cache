[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/template.main.js                                                                              //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\n                                                                                                        // 1\nTemplate.body.addContent((function() {                                                                  // 2\n  var view = this;                                                                                      // 3\n  return [ HTML.Raw(\"<h1>Welcome to Meteor!</h1>\\n\\n  \"), Spacebars.include(view.lookupTemplate(\"hello\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"info\")) ];\n}));                                                                                                    // 5\nMeteor.startup(Template.body.renderToDocument);                                                         // 6\n                                                                                                        // 7\nTemplate.__checkName(\"hello\");                                                                          // 8\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {                                        // 9\n  var view = this;                                                                                      // 10\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter\", function() {\n    return Spacebars.mustache(view.lookup(\"counter\"));                                                  // 12\n  }), \" times.\") ];                                                                                     // 13\n}));                                                                                                    // 14\n                                                                                                        // 15\nTemplate.__checkName(\"info\");                                                                           // 16\nTemplate[\"info\"] = new Template(\"Template.info\", (function() {                                          // 17\n  var view = this;                                                                                      // 18\n  return HTML.Raw('<h2>Learn Meteor!</h2>\\n  <ul>\\n    <li><a href=\"https://www.meteor.com/try\">Do the Tutorial</a></li>\\n    <li><a href=\"http://guide.meteor.com\">Follow the Guide</a></li>\\n    <li><a href=\"https://docs.meteor.com\">Read the Docs</a></li>\\n    <li><a href=\"https://forums.meteor.com\">Discussions</a></li>\\n  </ul>');\n}));                                                                                                    // 20\n                                                                                                        // 21\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"client_save_file.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/client_save_file.js                                                                           //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\n/**                                                                                                     //\n* @blob (https://developer.mozilla.org/en-US/docs/DOM/Blob)                                             //\n* @name the file's name                                                                                 //\n* @type the file's type: binary, text (https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods)\n*                                                                                                       //\n* TODO Support other encodings: https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods         //\n* ArrayBuffer / DataURL (base64)                                                                        //\n*/                                                                                                      //\nMeteor.saveFile = function (blob, name, path, type, callback) {                                         // 9\n  var fileReader = new FileReader(),                                                                    // 10\n      method,                                                                                           //\n      encoding = 'binary',                                                                              //\n      type = type || 'binary';                                                                          //\n  switch (type) {                                                                                       // 12\n    case 'text':                                                                                        // 13\n      // TODO Is this needed? If we're uploading content from file, yes, but if it's from an input/textarea I think not...\n      method = 'readAsText';                                                                            // 15\n      encoding = 'utf8';                                                                                // 16\n      break;                                                                                            // 17\n    case 'binary':                                                                                      // 12\n      method = 'readAsBinaryString';                                                                    // 19\n      encoding = 'binary';                                                                              // 20\n      break;                                                                                            // 21\n    default:                                                                                            // 12\n      method = 'readAsBinaryString';                                                                    // 23\n      encoding = 'binary';                                                                              // 24\n      break;                                                                                            // 25\n  }                                                                                                     // 12\n  fileReader.onload = function (file) {                                                                 // 27\n    Meteor.call('saveFile', file.srcElement.result, name, path, encoding, callback);                    // 28\n  };                                                                                                    //\n  fileReader[method](blob);                                                                             // 30\n};                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/templating\",\"meteor/reactive-var\",\"./main.html\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/main.js                                                                                       //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nvar _templating = require('meteor/templating');                                                         // 1\n                                                                                                        //\nvar _reactiveVar = require('meteor/reactive-var');                                                      // 2\n                                                                                                        //\nrequire('./main.html');                                                                                 // 4\n                                                                                                        //\n_templating.Template.hello.onCreated(function () {                                                      // 6\n  function helloOnCreated() {                                                                           // 6\n    // counter starts at 0                                                                              //\n    this.counter = new _reactiveVar.ReactiveVar(0);                                                     // 8\n  }                                                                                                     //\n                                                                                                        //\n  return helloOnCreated;                                                                                //\n}());                                                                                                   //\n                                                                                                        //\n_templating.Template.hello.helpers({                                                                    // 11\n  counter: function () {                                                                                // 12\n    function counter() {                                                                                //\n      return _templating.Template.instance().counter.get();                                             // 13\n    }                                                                                                   //\n                                                                                                        //\n    return counter;                                                                                     //\n  }()                                                                                                   //\n});                                                                                                     //\n                                                                                                        //\n_templating.Template.hello.events({                                                                     // 17\n  'click button': function () {                                                                         // 18\n    function clickButton(event, instance) {                                                             //\n      // increment the counter when button is clicked                                                   //\n      instance.counter.set(instance.counter.get() + 1);                                                 // 20\n    }                                                                                                   //\n                                                                                                        //\n    return clickButton;                                                                                 //\n  }()                                                                                                   //\n});                                                                                                     //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.html\");\nrequire(\"./client/client_save_file.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/client_save_file.js","/client/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,OAAO,QAAP,GAAkB,UAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,QAAjC,EAA2C;AAC7D,MAAI,aAAa,IAAI,UAAJ,EAAb;MACJ,MADA;MACQ,WAAW,QAAX;MAAqB,OAAO,QAAQ,QAAR,CAFyB;AAG7D,UAAQ,IAAR;AACA,SAAK,MAAL;;AAEA,eAAS,YAAT,CAFA;AAGA,iBAAW,MAAX,CAHA;AAIA,YAJA;AADA,SAMK,QAAL;AACA,eAAS,oBAAT,CADA;AAEA,iBAAW,QAAX,CAFA;AAGA,YAHA;AANA;AAWA,eAAS,oBAAT,CADA;AAEA,iBAAW,QAAX,CAFA;AAGA,YAHA;AAVA,GAH6D;AAkB7D,aAAW,MAAX,GAAoB,UAAS,IAAT,EAAe;AACnC,WAAO,IAAP,CAAY,UAAZ,EAAwB,KAAK,UAAL,CAAgB,MAAhB,EAAwB,IAAhD,EAAsD,IAAtD,EAA4D,QAA5D,EAAsE,QAAtE,EADmC;GAAf,CAlByC;AAqB7D,aAAW,MAAX,EAAmB,IAAnB,EArB6D;CAA3C,yG;;;;;;;;;;;ACRlB;;AACA;;AAEA;;AAEA,qBAAS,KAAT,CAAe,SAAf;AAAyB,WAAS,cAAT,GAA0B;;AAEjD,SAAK,OAAL,GAAe,6BAAgB,CAAhB,CAAf,CAFiD;GAA1B;;SAAS;GAAlC;;AAKA,qBAAS,KAAT,CAAe,OAAf,CAAuB;AACrB;uBAAU;AACR,aAAO,qBAAS,QAAT,GAAoB,OAApB,CAA4B,GAA5B,EAAP,CADQ;;;;KADW;CAAvB;;AAMA,qBAAS,KAAT,CAAe,MAAf,CAAsB;AACpB;yBAAe,OAAO,UAAU;;AAE9B,eAAS,OAAT,CAAiB,GAAjB,CAAqB,SAAS,OAAT,CAAiB,GAAjB,KAAyB,CAAzB,CAArB,CAF8B;;;;KADZ;CAAtB,yG","file":"/app.js","sourcesContent":["/**\n* @blob (https://developer.mozilla.org/en-US/docs/DOM/Blob)\n* @name the file's name\n* @type the file's type: binary, text (https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods)\n*\n* TODO Support other encodings: https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods\n* ArrayBuffer / DataURL (base64)\n*/\nMeteor.saveFile = function(blob, name, path, type, callback) {\nvar fileReader = new FileReader(),\nmethod, encoding = 'binary', type = type || 'binary';\nswitch (type) {\ncase 'text':\n// TODO Is this needed? If we're uploading content from file, yes, but if it's from an input/textarea I think not...\nmethod = 'readAsText';\nencoding = 'utf8';\nbreak;\ncase 'binary':\nmethod = 'readAsBinaryString';\nencoding = 'binary';\nbreak;\ndefault:\nmethod = 'readAsBinaryString';\nencoding = 'binary';\nbreak;\n}\nfileReader.onload = function(file) {\nMeteor.call('saveFile', file.srcElement.result, name, path, encoding, callback);\n}\nfileReader[method](blob);\n}\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport './main.html';\n\nTemplate.hello.onCreated(function helloOnCreated() {\n  // counter starts at 0\n  this.counter = new ReactiveVar(0);\n});\n\nTemplate.hello.helpers({\n  counter() {\n    return Template.instance().counter.get();\n  },\n});\n\nTemplate.hello.events({\n  'click button'(event, instance) {\n    // increment the counter when button is clicked\n    instance.counter.set(instance.counter.get() + 1);\n  },\n});\n"]}}]