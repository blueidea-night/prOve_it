[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"client_example.html\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/template.client_example.js                                                                    //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\n                                                                                                        // 1\nTemplate.__checkName(\"example\");                                                                        // 2\nTemplate[\"example\"] = new Template(\"Template.example\", (function() {                                    // 3\n  var view = this;                                                                                      // 4\n  return HTML.Raw('<input type=\"file\">');                                                               // 5\n}));                                                                                                    // 6\n                                                                                                        // 7\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/template.main.js                                                                              //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\n                                                                                                        // 1\nTemplate.body.addContent((function() {                                                                  // 2\n  var view = this;                                                                                      // 3\n  return [ HTML.Raw(\"<h1>Welcome to Meteor!</h1>\\n\\n  \"), Spacebars.include(view.lookupTemplate(\"hello\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"info\")), HTML.Raw('\\n\\n   <button type=\"button\">main</button>') ];\n}));                                                                                                    // 5\nMeteor.startup(Template.body.renderToDocument);                                                         // 6\n                                                                                                        // 7\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"api2.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/api2.js                                                                                       //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nRouter.route('/ex/', function () {                                                                      // 1\n  this.render('example');                                                                               // 2\n});                                                                                                     //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"client_example.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/client_example.js                                                                             //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.example.events({                                                                               // 1\n  'change input': function () {                                                                         // 2\n    function changeInput(ev) {                                                                          // 2\n      _.each(ev.currentTarget.files, function (file) {                                                  // 3\n        Meteor.saveFile(file, file.name);                                                               // 4\n      });                                                                                               //\n    }                                                                                                   //\n                                                                                                        //\n    return changeInput;                                                                                 //\n  }()                                                                                                   //\n});                                                                                                     //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"client_save_file.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/client_save_file.js                                                                           //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\n/**                                                                                                     //\n* @blob (https://developer.mozilla.org/en-US/docs/DOM/Blob)                                             //\n* @name the file's name                                                                                 //\n* @type the file's type: binary, text (https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods)\n*                                                                                                       //\n* TODO Support other encodings: https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods         //\n* ArrayBuffer / DataURL (base64)                                                                        //\n*/                                                                                                      //\nMeteor.saveFile = function (blob, name, path, type, callback) {                                         // 9\n   var fileReader = new FileReader(),                                                                   // 10\n       method,                                                                                          //\n       encoding = 'binary',                                                                             //\n       type = type || 'binary';                                                                         //\n   switch (type) {                                                                                      // 12\n      case 'text':                                                                                      // 13\n         // TODO Is this needed? If we're uploading content from file, yes, but if it's from an input/textarea I think not...\n         method = 'readAsText';                                                                         // 15\n         encoding = 'utf8';                                                                             // 16\n         break;                                                                                         // 17\n      case 'binary':                                                                                    // 12\n         method = 'readAsBinaryString';                                                                 // 19\n         encoding = 'binary';                                                                           // 20\n         break;                                                                                         // 21\n      default:                                                                                          // 12\n         method = 'readAsBinaryString';                                                                 // 23\n         encoding = 'binary';                                                                           // 24\n         break;                                                                                         // 25\n   }                                                                                                    // 12\n   fileReader.onload = function (file) {                                                                // 27\n      //Meteor.call('saveFile', file.srcElement.result, name, path, encoding, callback);                //\n      Meteor.call('saveFile', file.target.result, name, path, encoding, callback);                      // 29\n   };                                                                                                   //\n   fileReader[method](blob);                                                                            // 31\n};                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/templating\",\"meteor/reactive-var\",\"./main.html\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/main.js                                                                                       //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nvar _templating = require('meteor/templating');                                                         // 1\n                                                                                                        //\nvar _reactiveVar = require('meteor/reactive-var');                                                      // 2\n                                                                                                        //\nrequire('./main.html');                                                                                 // 4\n                                                                                                        //\n_templating.Template.hello.onCreated(function () {                                                      // 6\n  function helloOnCreated() {                                                                           // 6\n    // counter starts at 0                                                                              //\n    this.counter = new _reactiveVar.ReactiveVar(0);                                                     // 8\n  }                                                                                                     //\n                                                                                                        //\n  return helloOnCreated;                                                                                //\n}());                                                                                                   //\n                                                                                                        //\n_templating.Template.hello.helpers({                                                                    // 11\n  counter: function () {                                                                                // 12\n    function counter() {                                                                                //\n      return _templating.Template.instance().counter.get();                                             // 13\n    }                                                                                                   //\n                                                                                                        //\n    return counter;                                                                                     //\n  }()                                                                                                   //\n});                                                                                                     //\n                                                                                                        //\n_templating.Template.hello.events({                                                                     // 17\n  'click button': function () {                                                                         // 18\n    function clickButton(event, instance) {                                                             //\n      // increment the counter when button is clicked                                                   //\n      instance.counter.set(instance.counter.get() + 1);                                                 // 20\n    }                                                                                                   //\n                                                                                                        //\n    return clickButton;                                                                                 //\n  }()                                                                                                   //\n});                                                                                                     //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/client_example.html\");\nrequire(\"./client/main.html\");\nrequire(\"./client/api2.js\");\nrequire(\"./client/client_example.js\");\nrequire(\"./client/client_save_file.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/api2.js","/client/client_example.js","/client/client_save_file.js","/client/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,CAAa,MAAb,EAAqB,YAAY;AAC/B,OAAK,MAAL,CAAY,SAAZ,EAD+B;CAAZ,CAArB,wG;;;;;;;;;;;ACAA,SAAS,OAAT,CAAiB,MAAjB,CAAwB;AACtB;AAAgB,yBAAS,EAAT,EAAa;AAC3B,QAAE,IAAF,CAAO,GAAG,aAAH,CAAiB,KAAjB,EAAyB,UAAS,IAAT,EAAe;AAC7C,eAAO,QAAP,CAAgB,IAAhB,EAAsB,KAAK,IAAL,CAAtB,CAD6C;OAAf,CAAhC,CAD2B;KAAb;;;KAAhB;CADF,yG;;;;;;;;;;;;;;;;;;;ACQA,OAAO,QAAP,GAAkB,UAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,QAAjC,EAA2C;AAC1D,OAAI,aAAa,IAAI,UAAJ,EAAb;OACD,MADH;OACW,WAAW,QAAX;OAAqB,OAAO,QAAQ,QAAR,CAFmB;AAG1D,WAAQ,IAAR;AACG,WAAK,MAAL;;AAEG,kBAAS,YAAT,CAFH;AAGG,oBAAW,MAAX,CAHH;AAIG,eAJH;AADH,WAMQ,QAAL;AACG,kBAAS,oBAAT,CADH;AAEG,oBAAW,QAAX,CAFH;AAGG,eAHH;AANH;AAWM,kBAAS,oBAAT,CADH;AAEG,oBAAW,QAAX,CAFH;AAGG,eAHH;AAVH,IAH0D;AAkB1D,cAAW,MAAX,GAAoB,UAAS,IAAT,EAAe;;AAEhC,aAAO,IAAP,CAAY,UAAZ,EAAwB,KAAK,MAAL,CAAY,MAAZ,EAAoB,IAA5C,EAAkD,IAAlD,EAAwD,QAAxD,EAAkE,QAAlE,EAFgC;IAAf,CAlBsC;AAsB1D,cAAW,MAAX,EAAmB,IAAnB,EAtB0D;CAA3C,yG;;;;;;;;;;;ACRlB;;AACA;;AAEA;;AAEA,qBAAS,KAAT,CAAe,SAAf;AAAyB,WAAS,cAAT,GAA0B;;AAEjD,SAAK,OAAL,GAAe,6BAAgB,CAAhB,CAAf,CAFiD;GAA1B;;SAAS;GAAlC;;AAKA,qBAAS,KAAT,CAAe,OAAf,CAAuB;AACrB;uBAAU;AACR,aAAO,qBAAS,QAAT,GAAoB,OAApB,CAA4B,GAA5B,EAAP,CADQ;;;;KADW;CAAvB;;AAMA,qBAAS,KAAT,CAAe,MAAf,CAAsB;AACpB;yBAAe,OAAO,UAAU;;AAE9B,eAAS,OAAT,CAAiB,GAAjB,CAAqB,SAAS,OAAT,CAAiB,GAAjB,KAAyB,CAAzB,CAArB,CAF8B;;;;KADZ;CAAtB,yG","file":"/app.js","sourcesContent":["Router.route('/ex/', function () {\n  this.render('example');\n});","Template.example.events({\n  'change input': function(ev) {  \n    _.each(ev.currentTarget.files , function(file) {\n      Meteor.saveFile(file, file.name);\n    });\n  }\n});","/**\n* @blob (https://developer.mozilla.org/en-US/docs/DOM/Blob)\n* @name the file's name\n* @type the file's type: binary, text (https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods)\n*\n* TODO Support other encodings: https://developer.mozilla.org/en-US/docs/DOM/FileReader#Methods\n* ArrayBuffer / DataURL (base64)\n*/\nMeteor.saveFile = function(blob, name, path, type, callback) {\n   var fileReader = new FileReader(),\n      method, encoding = 'binary', type = type || 'binary';\n   switch (type) {\n      case 'text':\n         // TODO Is this needed? If we're uploading content from file, yes, but if it's from an input/textarea I think not...\n         method = 'readAsText';\n         encoding = 'utf8';\n         break;\n      case 'binary':\n         method = 'readAsBinaryString';\n         encoding = 'binary';\n         break;\n      default:\n         method = 'readAsBinaryString';\n         encoding = 'binary';\n         break;\n   }\n   fileReader.onload = function(file) {\n      //Meteor.call('saveFile', file.srcElement.result, name, path, encoding, callback);\n      Meteor.call('saveFile', file.target.result, name, path, encoding, callback);\n  }\n   fileReader[method](blob);\n}\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport './main.html';\n\nTemplate.hello.onCreated(function helloOnCreated() {\n  // counter starts at 0\n  this.counter = new ReactiveVar(0);\n});\n\nTemplate.hello.helpers({\n  counter() {\n    return Template.instance().counter.get();\n  },\n});\n\nTemplate.hello.events({\n  'click button'(event, instance) {\n    // increment the counter when button is clicked\n    instance.counter.set(instance.counter.get() + 1);\n  },\n});\n"]}}]