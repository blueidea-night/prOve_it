{"version":3,"sources":["meteor://ğŸ’»app/server/api.js","meteor://ğŸ’»app/server/server_save_file.js","meteor://ğŸ’»app/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP,CAAa,GAAb,EAAkB,YAAY;AAC5B,OAAK,MAAL,CAAY,MAAZ,EAAoB;AAClB;AAAM,sBAAY;AAAE,eAAO,MAAM,OAAN,CAAc,EAAC,KAAK,KAAK,MAAL,CAAY,GAAZ,EAApB,CAAP,CAAF;OAAZ;;;OAAN;GADF,EAD4B;CAAZ,CAAlB;;AAMA,OAAO,KAAP,CAAa,UAAb,EAAyB,YAAY;AACnC,MAAI,MAAM,KAAK,OAAL,CADyB;AAEnC,MAAI,MAAM,KAAK,QAAL,CAFyB;AAGnC,MAAI,GAAJ,CAAQ,yBAAR,EAHmC;CAAZ,EAItB,EAAC,OAAO,QAAP,EAJJ,wF;;;;;;;;;;;;;;;ACFA,OAAO,OAAP,CAAe;AACZ;AAAU,wBAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,QAA3B,EAAqC;AAC5C,aAAI,OAAO,UAAU,IAAV,CAAP;aAAwB,KAAK,IAAI,OAAJ,CAAY,IAAZ,CAAL;;;AAEzB,gBAAO,UAAU,QAAQ,MAAR,CAAjB;aAAkC,WAAW,YAAY,QAAZ;;;;AAG7C,kBAAS,OAAO,MAAP,IAAiB,wBAAjB;;;;;AANgC,aAW5C,GAAO,UAAU,OAAO,MAAM,IAAN,GAAa,GAAb,GAAmB,GAA1B,CAAV;;;AAXqC,WAc5C,CAAG,SAAH,CAAa,OAAO,IAAP,EAAa,IAA1B,EAAgC,QAAhC,EAA0C,UAAS,GAAT,EAAc;AACrD,gBAAI,GAAJ,EAAS;AACN,qBAAO,IAAI,OAAO,KAAP,CAAa,GAAjB,EAAsB,sBAAtB,EAA8C,GAA9C,CAAP,CADM;aAAT,MAEO;AACJ,uBAAQ,GAAR,CAAY,cAAc,IAAd,GAAqB,IAArB,GAA4B,QAA5B,GAAuC,iBAAvC,GAA2D,IAA3D,CAAZ,CADI;aAFP;UADuC,CAA1C,CAd4C;;AAsB5C,kBAAS,SAAT,CAAmB,GAAnB,EAAwB;AACrB,gBAAI,GAAJ,EAAS;AACN,sBAAO,IAAI,OAAJ,CAAY,OAAZ,EAAoB,EAApB,EAAwB,OAAxB,CAAgC,MAAhC,EAAuC,EAAvC,EACJ,OADI,CACI,MADJ,EACW,EADX,EACe,OADf,CACuB,MADvB,EAC8B,EAD9B,CAAP,CADM;aAAT;UADH;;AAOA,kBAAS,SAAT,CAAmB,GAAnB,EAAwB;AACrB,mBAAO,IAAI,OAAJ,CAAY,OAAZ,EAAoB,EAApB,EAAwB,OAAxB,CAAgC,KAAhC,EAAsC,EAAtC,CAAP,CADqB;UAAxB;OA7BO;;;MAAV;CADH,6G;;;;;;;;;;;ACJA;;AAEA,eAAO,OAAP,CAAe,YAAM;;CAAN,CAAf,4G","file":"/app.js","sourcesContent":["Router.route('/', function () {\n  this.render('Home', {\n    data: function () { return Items.findOne({_id: this.params._id}); }\n  });\n});\n\nRouter.route('/example', function () {\n  var req = this.request;\n  var res = this.response;\n  res.end('hello from the server\\n');\n}, {where: 'server'});","/**\n* TODO support other encodings:\n* http://stackoverflow.com/questions/7329128/how-to-write-binary-data-to-a-file-using-node-js\n*/\nMeteor.methods({\n   saveFile: function(blob, name, path, encoding) {\n      var path = cleanPath(path), fs = Npm.require('fs'),\n      //var path = cleanPath(path), fs = __meteor_bootstrap__.require('fs'), \n         name = cleanName(name || 'file'), encoding = encoding || 'binary',\n         //chroot = Meteor.chroot || 'public';\n         //chroot = Meteor.chroot || (process.env['PWD'] +'/public/') ;\n         chroot = Meteor.chroot || '../../../../../public/';\n\n      // Clean up the path. Remove any initial and final '/' -we prefix them-,\n      // any sort of attempt to go to the parent directory '..' and any empty directories in\n      // between '/////' - which may happen after removing '..'\n      path = chroot + (path ? '/' + path + '/' : '/');\n      \n      // TODO Add file existance checks, etc...\n      fs.writeFile(path + name, blob, encoding, function(err) {\n         if (err) {\n            throw (new Meteor.Error(500, 'Failed to save file.', err));\n         } else {\n            console.log('The file ' + name + ' (' + encoding + ') was saved to ' + path);\n         }\n      });\n\n      function cleanPath(str) {\n         if (str) {\n            return str.replace(/\\.\\./g,'').replace(/\\/+/g,'').\n               replace(/^\\/+/,'').replace(/\\/+$/,'');\n            }\n         }\n\n      function cleanName(str) {\n         return str.replace(/\\.\\./g,'').replace(/\\//g,'');\n      }\n   }\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}