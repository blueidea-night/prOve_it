{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/api.js","filenameRelative":"/server/api.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/api.js.map","sourceFileName":"/server/api.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"api"},"ignored":false,"code":"Router.route('/', function () {\n  // Two parts here. Oof. So, our friend CORS is fussy. In order to get our\n  // request through, we need to do two things: let it know that the request\n  // is allowed from the originating server AND, let it know what options it\n  // is allowed to send with the request.\n\n  // There are two types of requests happening: OPTIONS and the actual request.\n  // An OPTIONS request is known as a \"pre-flight\" request. Before the actual\n  // request is run, it will ask if it is allowed to make the request, AND,\n  // if the data it's asking to pass over is allowed.\n\n  // Setting Access-Control-Allow-Origin answers the first question, by saying\n  // what domains requests are allowed to be made from (in this case * is equal\n  // to saying \"anywhere\").\n  this.response.setHeader('Access-Control-Allow-Origin', '*');\n\n  // Here, we check the request method to see if it's an OPTIONS request, or,\n  // a pre-flight check. If it is, we pass along a list of allowed headers and\n  // methods, followed by an end to that request (the pre-flight). Once this is\n  // received by the requesting server, it will attempt to perform the actual\n  // request (GET, POST, PUT, or DELETE).\n  if (this.request.method === \"OPTIONS\") {\n    this.response.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n    this.response.setHeader('Access-Control-Allow-Methods', 'POST, PUT, GET, DELETE, OPTIONS');\n    this.response.end('Set OPTIONS.');\n  } else {\n    // If we've already passed through the OPTIONS request, we go ahead and call\n    // our actual HTTP method.\n  }\n}, { where: 'server' });","ast":null,"map":{"version":3,"sources":["/server/api.js"],"names":[],"mappings":"AAAA,OAAO,KAAP,CAAc,GAAd,EAAmB,YAAW;;;;;;;;;;;;;;AAc5B,OAAK,QAAL,CAAc,SAAd,CAAyB,6BAAzB,EAAwD,GAAxD;;;;;;;AAd4B,MAqBvB,KAAK,OAAL,CAAa,MAAb,KAAwB,SAAxB,EAAoC;AACvC,SAAK,QAAL,CAAc,SAAd,CAAyB,8BAAzB,EAAyD,gDAAzD,EADuC;AAEvC,SAAK,QAAL,CAAc,SAAd,CAAyB,8BAAzB,EAAyD,iCAAzD,EAFuC;AAGvC,SAAK,QAAL,CAAc,GAAd,CAAmB,cAAnB,EAHuC;GAAzC,MAIO;;;GAJP;CArBiB,EA6BhB,EAAE,OAAO,QAAP,EA7BL","file":"/server/api.js.map","sourcesContent":["Router.route( '/', function() {\n  // Two parts here. Oof. So, our friend CORS is fussy. In order to get our\n  // request through, we need to do two things: let it know that the request\n  // is allowed from the originating server AND, let it know what options it\n  // is allowed to send with the request.\n\n  // There are two types of requests happening: OPTIONS and the actual request.\n  // An OPTIONS request is known as a \"pre-flight\" request. Before the actual\n  // request is run, it will ask if it is allowed to make the request, AND,\n  // if the data it's asking to pass over is allowed.\n\n  // Setting Access-Control-Allow-Origin answers the first question, by saying\n  // what domains requests are allowed to be made from (in this case * is equal\n  // to saying \"anywhere\").\n  this.response.setHeader( 'Access-Control-Allow-Origin', '*' );\n\n  // Here, we check the request method to see if it's an OPTIONS request, or,\n  // a pre-flight check. If it is, we pass along a list of allowed headers and\n  // methods, followed by an end to that request (the pre-flight). Once this is\n  // received by the requesting server, it will attempt to perform the actual\n  // request (GET, POST, PUT, or DELETE).\n  if ( this.request.method === \"OPTIONS\" ) {\n    this.response.setHeader( 'Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept' );\n    this.response.setHeader( 'Access-Control-Allow-Methods', 'POST, PUT, GET, DELETE, OPTIONS' );\n    this.response.end( 'Set OPTIONS.' );\n  } else {\n    // If we've already passed through the OPTIONS request, we go ahead and call\n    // our actual HTTP method.\n  }\n}, { where: 'server' } );\n\n\n"]},"hash":"c03d1111786464ee387e33c7dbe88e64678c6937"}
