{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/server_save_file.js","filenameRelative":"/server/server_save_file.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/server_save_file.js.map","sourceFileName":"/server/server_save_file.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"server_save_file"},"ignored":false,"code":"/**\n* TODO support other encodings:\n* http://stackoverflow.com/questions/7329128/how-to-write-binary-data-to-a-file-using-node-js\n*/\nMeteor.methods({\n  saveFile: function () {\n    function saveFile(blob, name, path, encoding) {\n      var path = cleanPath(path),\n          fs = __meteor_bootstrap__.require('fs'),\n          name = cleanName(name || 'file'),\n          encoding = encoding || 'binary',\n          chroot = Meteor.chroot || 'public';\n      // Clean up the path. Remove any initial and final '/' -we prefix them-,\n      // any sort of attempt to go to the parent directory '..' and any empty directories in\n      // between '/////' - which may happen after removing '..'\n      path = chroot + (path ? '/' + path + '/' : '/');\n      // TODO Add file existance checks, etc...\n      fs.writeFile(path + name, blob, encoding, function (err) {\n        if (err) {\n          throw new Meteor.Error(500, 'Failed to save file.', err);\n        } else {\n          console.log('The file ' + name + ' (' + encoding + ') was saved to ' + path);\n        }\n      });\n      function cleanPath(str) {\n        if (str) {\n          return str.replace(/\\.\\./g, '').replace(/\\/+/g, '').replace(/^\\/+/, '').replace(/\\/+$/, '');\n        }\n      }\n      function cleanName(str) {\n        return str.replace(/\\.\\./g, '').replace(/\\//g, '');\n      }\n    }\n\n    return saveFile;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/server/server_save_file.js"],"names":[],"mappings":";;;;AAIA,OAAO,OAAP,CAAe;AACf;AAAU,sBAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,QAA3B,EAAqC;AAC/C,UAAI,OAAO,UAAU,IAAV,CAAP;UAAwB,KAAK,qBAAqB,OAArB,CAA6B,IAA7B,CAAL;UAC5B,OAAO,UAAU,QAAQ,MAAR,CAAjB;UAAkC,WAAW,YAAY,QAAZ;UAC7C,SAAS,OAAO,MAAP,IAAiB,QAAjB;;;;AAHsC,UAO/C,GAAO,UAAU,OAAO,MAAM,IAAN,GAAa,GAAb,GAAmB,GAA1B,CAAV;;AAPwC,QAS/C,CAAG,SAAH,CAAa,OAAO,IAAP,EAAa,IAA1B,EAAgC,QAAhC,EAA0C,UAAS,GAAT,EAAc;AACxD,YAAI,GAAJ,EAAS;AACT,gBAAO,IAAI,OAAO,KAAP,CAAa,GAAjB,EAAsB,sBAAtB,EAA8C,GAA9C,CAAP,CADS;SAAT,MAEO;AACP,kBAAQ,GAAR,CAAY,cAAc,IAAd,GAAqB,IAArB,GAA4B,QAA5B,GAAuC,iBAAvC,GAA2D,IAA3D,CAAZ,CADO;SAFP;OAD0C,CAA1C,CAT+C;AAgB/C,eAAS,SAAT,CAAmB,GAAnB,EAAwB;AACxB,YAAI,GAAJ,EAAS;AACT,iBAAO,IAAI,OAAJ,CAAY,OAAZ,EAAoB,EAApB,EAAwB,OAAxB,CAAgC,MAAhC,EAAuC,EAAvC,EACP,OADO,CACC,MADD,EACQ,EADR,EACY,OADZ,CACoB,MADpB,EAC2B,EAD3B,CAAP,CADS;SAAT;OADA;AAMA,eAAS,SAAT,CAAmB,GAAnB,EAAwB;AACxB,eAAO,IAAI,OAAJ,CAAY,OAAZ,EAAoB,EAApB,EAAwB,OAAxB,CAAgC,KAAhC,EAAsC,EAAtC,CAAP,CADwB;OAAxB;KAtBU;;;KAAV;CADA","file":"/server/server_save_file.js.map","sourcesContent":["/**\n* TODO support other encodings:\n* http://stackoverflow.com/questions/7329128/how-to-write-binary-data-to-a-file-using-node-js\n*/\nMeteor.methods({\nsaveFile: function(blob, name, path, encoding) {\nvar path = cleanPath(path), fs = __meteor_bootstrap__.require('fs'),\nname = cleanName(name || 'file'), encoding = encoding || 'binary',\nchroot = Meteor.chroot || 'public';\n// Clean up the path. Remove any initial and final '/' -we prefix them-,\n// any sort of attempt to go to the parent directory '..' and any empty directories in\n// between '/////' - which may happen after removing '..'\npath = chroot + (path ? '/' + path + '/' : '/');\n// TODO Add file existance checks, etc...\nfs.writeFile(path + name, blob, encoding, function(err) {\nif (err) {\nthrow (new Meteor.Error(500, 'Failed to save file.', err));\n} else {\nconsole.log('The file ' + name + ' (' + encoding + ') was saved to ' + path);\n}\n});\nfunction cleanPath(str) {\nif (str) {\nreturn str.replace(/\\.\\./g,'').replace(/\\/+/g,'').\nreplace(/^\\/+/,'').replace(/\\/+$/,'');\n}\n}\nfunction cleanName(str) {\nreturn str.replace(/\\.\\./g,'').replace(/\\//g,'');\n}\n}\n});\n"]},"hash":"80bc55c93d519f88a05b11df59ab8a71f7381899"}
